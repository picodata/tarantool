variables:
    # set larger git depth, so git describe works properly
    GIT_DEPTH: 0
    USER: 'tarantool'

stages:
  - test
  - build
  - pack
  - sign
  - deploy
  - check-deployment
  - docker

.test:
    stage: test
    before_script:
      - git submodule update --init --recursive
      - git submodule foreach --recursive 'git clean -xffd'
      - git clean -xffd

luacheck:
    extends: .test
    tags: [docker]
    image: docker-public.binary.picodata.io/tarantool-testing:latest
    script:
      - make -f .test.mk luacheck

test-ubuntu:
    extends: .test
    retry: 2
    tags: [docker]
    image: docker-public.binary.picodata.io/tarantool-testing:latest
    script:
      - export PATH="$PATH:$PWD" # for GLAuth (CMake will download it)
      - make -f .test.mk test-release

test_mac-m1:
    extends: .test
    tags: [mac-dev-m1]
    script:
      - ulimit -n 10240
      - sudo mkdir -p /private/tmp/t
      - sudo chown -R $(id -u) /private/tmp/t
      - export PATH="$PATH:$PWD" # for GLAuth (CMake will download it)
      - make -f .test.mk build

checkpatch:
    extends: .test
    tags: [shell_p_t]
    script:
      - git clone git@github.com:tarantool/checkpatch.git
      - checkpatch/checkpatch.pl --color=always --git HEAD~1..HEAD

# run long tests and coverage on release build
coverage:
    extends: .test
    stage: build
    only:
      - web
      - tags
    retry: 2
    tags: [docker]
    image: docker-public.binary.picodata.io/tarantool-testing:latest
    variables:
      TEST_RUN_RETRIES: 3
      SERVER_START_TIMEOUT: 400
      REPLICATION_SYNC_TIMEOUT: 400
      TEST_TIMEOUT: 400
      NO_OUTPUT_TIMEOUT: 400
    script:
      - export PATH="$PATH:$PWD" # for GLAuth (CMake will download it)
      - make -f .test.mk test-coverage

.pack:
  tags:
    - shell_p_t
  only:
    - web
    - tags
  variables:
    MAKE_CHECK: 'false'
    PRESERVE_ENVVARS: MAKE_CHECK
  before_script:
    - git describe --long
    - git submodule update --init --recursive
    - git submodule foreach --recursive 'git clean -xffd'
    - git clean -xffd
    - rm rpm/tarantool.spec
    - rm -rf debian
    - cp -r debian-picodata debian
    - mkdir -p ~/.docker
    - echo $DOCKER_AUTH_RO > ~/.docker/config.json
    - git clone https://github.com/packpack/packpack.git packpack
  timeout: 2h
  dependencies: []

build-sources:
  stage: pack
  extends: .pack
  script:
    - OS=centos DIST=7 BUILDDIR=$PWD/build_sources packpack/packpack tarball
  artifacts:
    paths:
      - build_sources/tarantool*.tar.xz

build-package-centos:
  stage: pack
  extends: .pack
  script:
    - OS=centos DIST=7 BUILDDIR=$PWD/build_rpm/ make -f .pack.mk package
    - OS=centos DIST=8 BUILDDIR=$PWD/build_rpm/ make -f .pack.mk package
  artifacts:
    paths:
      - build_rpm/tarantool*.rpm

build-package-altlinux:
  stage: pack
  extends: .pack
  script:
    - DOCKER_REPO=docker-picodata.binary.picodata.io/packpack/alt DOCKER_IMAGE=p9 BUILDDIR=$PWD/build_rpm/ packpack/packpack
    - DOCKER_REPO=docker-picodata.binary.picodata.io/packpack/alt DOCKER_IMAGE=p10 BUILDDIR=$PWD/build_rpm/ packpack/packpack
  artifacts:
    paths:
      - build_rpm/tarantool*.rpm

build-package-ubuntu:
  stage: pack
  extends: .pack
  script:
    - OS=ubuntu DIST=focal BUILDDIR=$PWD/build_${DIST}/ RELEASE=${DIST} make -f .pack.mk package
    - OS=ubuntu DIST=jammy BUILDDIR=$PWD/build_${DIST}/ RELEASE=${DIST} make -f .pack.mk package
  artifacts:
    paths:
      - build_focal/*.deb
      - build_jammy/*.deb

build-package-debian:
  stage: pack
  extends: .pack
  script:
    - OS=debian DIST=bullseye BUILDDIR=$PWD/build_${DIST}/ RELEASE=${DIST} make -f .pack.mk package
  artifacts:
    paths:
      - build_bullseye/*.deb

build-package-redos:
  stage: pack
  extends: .pack
  script:
    - OS=redos DIST=7.3 BUILDDIR=$PWD/build_redos/ make -f .pack.mk package
  artifacts:
    paths:
      - build_redos/tarantool*.rpm

build-package-astralinux:
  stage: pack
  extends: .pack
  script:
    - DOCKER_REPO=docker-picodata.binary.picodata.io/packpack/astra DOCKER_IMAGE=orel-2.12 BUILDDIR=$PWD/build_astra packpack/packpack
  artifacts:
    paths:
      - build_astra/*.deb

build-package-rosa:
  stage: pack
  extends: .pack
  script:
    - DOCKER_REPO=docker-picodata.binary.picodata.io/packpack/rosa  DOCKER_IMAGE=chrome BUILDDIR=$PWD/build_rosa packpack/packpack
  artifacts:
    paths:
      - build_rosa/*.rpm

build-package-macos-arm:
  stage: pack
  tags:
    - mac-dev-m1
  only:
    - web
    - tags
  variables:
    PKGNAME: 'tarantool-picodata'
    BUILDDIR: 'build_mac_arm'
    MACOS: 'ventura'
  before_script:
    - git describe --long
    - git submodule update --init --recursive
    - git submodule foreach --recursive 'git clean -xffd'
    - mkdir $BUILDDIR
  script: |
    CURDIR=$PWD
    VER=$(git describe --long | sed -n 's/^\([0-9\.]*\)-\([0-9]*\)-\([a-z0-9]*\)/\1.\2/p')
    MAJOR=$(echo $VER | cut -f 1-2 -d '.')
    echo $VER > VERSION
    pushd $BUILDDIR
    INSTALL_PREFIX=/opt/homebrew/Cellar/$PKGNAME@$MAJOR/$VER
    rm -rf $INSTALL_PREFIX
    echo "-------------------------------------------------------------------"
    echo "Prepare bottle"
    echo "-------------------------------------------------------------------"
    cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DDARWIN_BUILD_TYPE=None -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX -DENABLE_DIST=ON
    make
    make install
    cp ../AUTHORS ../README.md ../LICENSE ../TODO $INSTALL_PREFIX/
    cd $INSTALL_PREFIX
    mkdir .bottle
    mv etc var .bottle/
    rm -rf lib
    cd ../../
    tar -caf $CURDIR/$BUILDDIR/$PKGNAME@$MAJOR-$VER.arm64_$MACOS.bottle.tar.gz $PKGNAME@$MAJOR/$VER
    popd
    echo "-------------------------------------------------------------------"
    echo "Prepare tarball with sources"
    echo "-------------------------------------------------------------------"
    mkdir $BUILDDIR/$PKGNAME-$VER
    rsync -r -l \
      --exclude=.git --exclude='.gitignore' --exclude='.gitmodules' \
      --exclude=FreeBSD --exclude=debian --exclude=rpm --exclude=rump \
      --exclude=apk --exclude=$BUILDDIR \
      * $BUILDDIR/$PKGNAME-$VER/
    cd $BUILDDIR
    tar --uid=0 --gid=0 -caPf $PKGNAME-$VER.tar.gz $PKGNAME-$VER
    shasum -a 256  $PKGNAME*$VER*.tar.gz
  timeout: 1h
  dependencies: []
  artifacts:
    paths:
      - $BUILDDIR/*.tar.gz

.sign:
  tags:
    - shell_p_t
  only:
    - web
    - tags
  before_script:
    - mkdir -p ~/.docker
    - echo $DOCKER_AUTH_RO > ~/.docker/config.json

sign-rpm-packages:
  stage: sign
  extends: .sign
  script:
    - echo "$GPG_KEY_KDY" | base64 -d > build_rpm/kdy.asc
    - echo "$GPG_KEY_KDY" | base64 -d > build_redos/kdy.asc
    - echo "$GPG_KEY_KDY" | base64 -d > build_rosa/kdy.asc
    - docker run --rm -e KEY_FILE=kdy.asc -v $PWD/build_rpm:/build docker-picodata.binary.picodata.io/rpmsign:centos7
    - docker run --rm -e KEY_FILE=kdy.asc -v $PWD/build_redos:/build docker-picodata.binary.picodata.io/rpmsign:centos7
    - docker run --rm -e KEY_FILE=kdy.asc -v $PWD/build_rosa:/build docker-picodata.binary.picodata.io/rpmsign:centos7
  artifacts:
    paths:
      - build_rpm/tarantool*.rpm
      - build_redos/tarantool*.rpm
      - build_rosa/tarantool*.rpm
  dependencies:
    - build-package-centos
    - build-package-altlinux
    - build-package-redos
    - build-package-rosa

sign-astralinux-packages:
  stage: sign
  extends: .sign
  script:
    - echo "$GPG_KEY_ASTRA" | base64 -d > build_astra/pico.asc
    - echo "$GPG_PASS_ASTRA" > build_astra/pico.pass
    - docker run --rm -e KEY_FILE=pico.asc -e PASS_FILE=pico.pass -e SIGNER="5A7D5C9D749260B6CCD24D72A45397D5554CBECD" -v $PWD/build_astra:/build docker-picodata.binary.picodata.io/astrasign:orel-2.12
  artifacts:
    paths:
      - build_astra/tarantool*_signed.deb
  dependencies:
    - build-package-astralinux

deploy-job:
  stage: deploy
  tags:
    - shell_p_t
  only:
#    - web
    - tags
  before_script:
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_PROD_SSH_KEY" | base64 -d | ssh-add -
    - echo "$GPG_KEY_KDY" | base64 -d > /tmp/key.asc
  script:
    - echo "Deploying application..."
    - echo
    - echo "Deploying rpm-packets..."
    # Sources
    - scp -o stricthostkeychecking=no build_sources/tarantool*.tar.xz ansible@picodata.io:/data/nginx/www/packrepo/tarantool-picodata/sources/
    # CentOS7
    - scp -o stricthostkeychecking=no build_rpm/tarantool*.el7.*rpm ansible@picodata.io:/data/nginx/www/packrepo/tarantool-picodata/el/7/x86_64/
    - ssh -o stricthostkeychecking=no ansible@picodata.io "cd /data/nginx/www/packrepo/tarantool-picodata/el/7/ && createrepo --update x86_64 && gpg --no-tty --yes -u kdy@picodata.io --detach-sign --armor x86_64/repodata/repomd.xml"
    # CentOS8
    - scp -o stricthostkeychecking=no build_rpm/tarantool*.el8.*rpm ansible@picodata.io:/data/nginx/www/packrepo/tarantool-picodata/el/8/x86_64/
    - ssh -o stricthostkeychecking=no ansible@picodata.io "cd /data/nginx/www/packrepo/tarantool-picodata/el/8/ && createrepo --update x86_64 && gpg --no-tty --yes -u kdy@picodata.io --detach-sign --armor x86_64/repodata/repomd.xml"
    - echo "rpm-packets successfully deployed."
    - echo
    # Ubuntu focal
    - echo "Deploying deb-packets..."
    - ssh -o stricthostkeychecking=no ansible@picodata.io "mkdir -p ~/.deb/tnt-focal"
    - scp -o stricthostkeychecking=no build_focal/tarantool*deb ansible@picodata.io:.deb/tnt-focal/
    - ssh -o stricthostkeychecking=no ansible@picodata.io "reprepro --keepunreferencedfiles -b /data/nginx/www/packrepo/tarantool-picodata/ubuntu/ -C main includedeb focal ~/.deb/tnt-focal/tarantool*deb; rm -rf ~/.deb/tnt-focal"
    # Ubuntu jammy
    - ssh -o stricthostkeychecking=no ansible@picodata.io "mkdir -p ~/.deb/tnt-jammy"
    - scp -o stricthostkeychecking=no build_jammy/tarantool*deb ansible@picodata.io:.deb/tnt-jammy/
    - ssh -o stricthostkeychecking=no ansible@picodata.io "reprepro --keepunreferencedfiles -b /data/nginx/www/packrepo/tarantool-picodata/ubuntu/ -C main includedeb jammy ~/.deb/tnt-jammy/tarantool*deb; rm -rf ~/.deb/tnt-jammy"
    # Debian bullseye
    - ssh -o stricthostkeychecking=no ansible@picodata.io "mkdir -p ~/.deb/tnt-bullseye"
    - scp -o stricthostkeychecking=no build_bullseye/tarantool*deb ansible@picodata.io:.deb/tnt-bullseye/
    - ssh -o stricthostkeychecking=no ansible@picodata.io "reprepro --keepunreferencedfiles -b /data/nginx/www/packrepo/tarantool-picodata/debian/ -C main includedeb bullseye ~/.deb/tnt-bullseye/tarantool*deb; rm -rf ~/.deb/tnt-bullseye"
    - echo "deb-packets successfully deployed."
    - echo
    # Altlinux p9
    - ssh -o stricthostkeychecking=no ansible@picodata.io "mkdir -p /tmp/altlinux/"
    - echo "Deploying altlinux-p9 packet..."
    - scp -o stricthostkeychecking=no build_rpm/tarantool*.p9.*rpm ansible@picodata.io:/tmp/altlinux/
    - echo "altlinux-p9 packet successfully deployed."
    - echo
    # Altlinux p10
    - echo "Deploying altlinux-p10 packet..."
    - scp -o stricthostkeychecking=no build_rpm/tarantool*.p10.*rpm ansible@picodata.io:/tmp/altlinux/
    - echo "altlinux-p10 packet successfully deployed."
    - ssh -o stricthostkeychecking=no ansible@picodata.io "/usr/local/bin/repogen.sh"
    - echo "Altlinux packets successfully deployed."
    - echo
    # RedOS
    - echo "Deploying RedOS 7 packet..."
    - scp -o stricthostkeychecking=no build_redos/tarantool*.el7.*rpm ansible@picodata.io:/data/nginx/www/packrepo/tarantool-picodata/redos/7/x86_64/
    - ssh -o stricthostkeychecking=no ansible@picodata.io "cd /data/nginx/www/packrepo/tarantool-picodata/redos/7/ && createrepo --update x86_64 && gpg --no-tty --yes -u kdy@picodata.io --detach-sign --armor x86_64/repodata/repomd.xml"
    - echo "RedOS 7 packet successfully deployed."
    - echo
    # Astralinux
    - echo "Deploying Astralinux packet..."
    - ssh -o stricthostkeychecking=no ansible@picodata.io "mkdir -p ~/.deb/tnt-astra"
    - scp -o stricthostkeychecking=no build_astra/tarantool*_signed.deb ansible@picodata.io:.deb/tnt-astra/
    - ssh -o stricthostkeychecking=no ansible@picodata.io "reprepro --keepunreferencedfiles -b /data/nginx/www/packrepo/tarantool-picodata/astra -C main includedeb orel ~/.deb/tnt-astra/tarantool*_signed.deb; rm -rf ~/.deb/tnt-astra"
    - echo "Astralinux packets successfully deployed."
    - echo
    # ROSA linux
    - echo "Deploying ROSA linux packet..."
    - scp -o stricthostkeychecking=no build_rosa/tarantool*-rosa*.rpm ansible@picodata.io:/data/nginx/www/packrepo/tarantool-picodata/rosa/chrome/x86_64/
    - ssh -o stricthostkeychecking=no ansible@picodata.io "cd /data/nginx/www/packrepo/tarantool-picodata/rosa/chrome/ && createrepo --update x86_64 && gpg --no-tty --yes -u kdy@picodata.io --detach-sign --armor x86_64/repodata/repomd.xml"
    - echo "ROSA linux packets successfully deployed."
    - echo
    - echo "Application successfully deployed."
  dependencies:
    - build-sources
    - build-package-debian
    - build-package-ubuntu
    - sign-rpm-packages
    - sign-astralinux-packages

deploy-macos:
  stage: deploy
  tags:
    - mac-dev-m1
  only:
#    - web
    - tags
  variables:
    PKGNAME: 'tarantool-picodata'
    BUILDDIR: 'build_mac_arm'
  script: |
    VER=$(git describe --long | sed -n 's/^\([0-9\.]*\)-\([0-9]*\)-\([a-z0-9]*\)/\1.\2/p')
    MAJOR=$(echo $VER | cut -f 1-2 -d '.')
    curl -v -H "Authorization: Basic $RAW_AUTH_RW" --upload-file $BUILDDIR/$PKGNAME-$VER.tar.gz $RAW_REGISTRY/brew/packages/
    curl -v -H "Authorization: Basic $RAW_AUTH_RW" --upload-file $BUILDDIR/$PKGNAME@$MAJOR-$VER.*.bottle.tar.gz $RAW_REGISTRY/brew/bottle/
  dependencies:
    - build-package-macos-arm

.check-deployment:
  stage: check-deployment
  tags:
    - docker
  only:
#    - web
    - tags
  before_script:
    - mkdir -p ~/.docker
    - echo $DOCKER_AUTH_RO > ~/.docker/config.json
  image: ${BASE_IMAGE}
  needs:
    - deploy-job

check_deployment_rpm:
  extends: .check-deployment
  parallel:
    matrix:
      - BASE_IMAGE: centos:7
        PACKAGE: el/7/x86_64/picodata-release-1.1.2.0-1.el7.x86_64.rpm
        GIT_FETCH_PARAM: depth
      - BASE_IMAGE: rockylinux:8
        PACKAGE: el/8/x86_64/picodata-release-1.1.2.0-1.el8.x86_64.rpm
        GIT_FETCH_PARAM: deepen
      - BASE_IMAGE: packpack/packpack:redos-7.3
        PACKAGE: redos/7/x86_64/picodata-release-1.1.2.0-1.el7.x86_64.rpm
        GIT_FETCH_PARAM: deepen
      - BASE_IMAGE: docker-picodata.binary.picodata.io/packpack/rosa:chrome
        PACKAGE: rosa/chrome/x86_64/picodata-release-1.1.2.0-1-rosa2021.1.x86_64.rpm
        GIT_FETCH_PARAM: deepen
  before_script:
    - yum install -y git
    - until git describe; do git fetch --${GIT_FETCH_PARAM} 100; done
    - export VER=$(git describe --long | sed -n 's/^\([0-9\.]*\)-\([0-9]*\)-\([a-z0-9]*\)/\1.\2/p' | sed 's/-/~/')
  script:
    - rpm --import https://download.picodata.io/tarantool-picodata/el/RPM-GPG-KEY-kdy
    - yum install -y https://download.picodata.io/tarantool-picodata/${PACKAGE}
    - yum install -y tarantool-picodata-${VER} tarantool-picodata-devel-${VER}

check-deployment-deb:
  extends: .check-deployment
  variables:
    DEBIAN_FRONTEND: noninteractive
    TZ: Europe/Moscow
  parallel:
    matrix:
      - BASE_IMAGE: debian:bullseye
      - BASE_IMAGE: ubuntu:focal
      - BASE_IMAGE: ubuntu:jammy
  before_script:
    - apt update
    - apt install -y curl gpg software-properties-common git
    - export DIST=$(lsb_release -si | tr [:upper:] [:lower:])
    - export CODENAME=$(lsb_release -sc)
    - until git describe; do git fetch --deepen 100; done
    - export VER=$(git describe --long | sed -n 's/^\([0-9\.]*\)-\([0-9]*\)-\([a-z0-9]*\)/\1.\2/p' | sed 's/-/~/')
  script:
    - curl -s https://download.picodata.io/tarantool-picodata/ubuntu/picodata.gpg.key | gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/picodata.gpg --import
    - chmod 644 /etc/apt/trusted.gpg.d/picodata.gpg
    - add-apt-repository -y "deb [arch=amd64] https://download.picodata.io/tarantool-picodata/${DIST}/ ${CODENAME} main"
    - apt update
    - apt install -y tarantool-picodata=${VER}-${CODENAME} tarantool-picodata-dev=${VER}-${CODENAME}

check-deployment-alt:
  extends: .check-deployment
  parallel:
    matrix:
      - DIST: p10
      - DIST: p9
  image: docker.binary.picodata.io/altlinux/base:${DIST}
  script:
    - apt-get update
    - apt-get install -y curl git apt-https
    - until git describe; do git fetch --deepen 100; done
    - export VER=$(git describe --long | sed -n 's/^\([0-9\.]*\)-\([0-9]*\)-\([a-z0-9]*\)/\1.\2/p')
    - apt-get install -y https://download.picodata.io/tarantool-picodata/altlinux/${DIST}/picodata-release-1.0.2.7-1.${DIST}.x86_64.rpm
    - apt-get update
    - apt-get install -y tarantool-picodata=${VER} tarantool-picodata-devel=${VER}

check-deployment-astra:
  extends: .check-deployment
  image: docker-picodata.binary.picodata.io/astra/orel:2.12
  script:
    - apt-get update
    - apt-get install -y curl git apt-transport-https
    - until git describe; do git fetch --deepen 100; done
    - export VER=$(git describe --long | sed -n 's/^\([0-9\.]*\)-\([0-9]*\)-\([a-z0-9]*\)/\1.\2/p')
    - curl -s https://download.picodata.io/tarantool-picodata/ubuntu/picodata.gpg.key | gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/picodata.gpg --import
    - chmod 644 /etc/apt/trusted.gpg.d/picodata.gpg
    - echo "deb [arch=amd64] https://download.picodata.io/tarantool-picodata/astra/ orel main" > /etc/apt/sources.list.d/picodata.list
    - apt-get update
    - apt-get install -y tarantool-picodata=${VER}-1 tarantool-picodata-dev=${VER}-1

docker:
  stage: docker
  only:
#    - web
    - tags
  variables:
    DOCKER_REGISTRY_PUB: docker-public.binary.picodata.io
    DOCKER_AUTH_CONFIG: $DOCKER_AUTH_RW
  tags:
    - shell_p_t
  before_script:
    - mkdir -p $CI_PROJECT_DIR/.docker
    - echo $DOCKER_AUTH_RW > $CI_PROJECT_DIR/.docker/config.json
    - TAG_SHORT=$(git describe | awk -F- '{print $1}')
    - TAG_LONG=$(git describe --long | sed -n 's/^\([0-9\.]*\)-\([0-9]*\)-\([a-z0-9]*\)/\1.\2/p')
    - echo $TAG_SHORT
    - echo $TAG_LONG
  script:
    - docker build docker/ -t $DOCKER_REGISTRY_PUB/tarantool:$TAG_SHORT -t $DOCKER_REGISTRY_PUB/tarantool:$TAG_LONG -t $DOCKER_REGISTRY_PUB/tarantool:latest
    - docker --config $CI_PROJECT_DIR/.docker/ push -a $DOCKER_REGISTRY_PUB/tarantool
  dependencies: []
